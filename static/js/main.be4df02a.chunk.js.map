{"version":3,"sources":["components/Timer/timer.jsx","components/Panel/Panel-basket.jsx","components/Panel/Panel.jsx","img/gamefield.png","components/GameField/GameField.jsx","components/ScoreBoard/ScoreBoard.jsx","components/Timer/time.jsx","App.js","index.js"],"names":["Timer","props","state","renderTimer","bind","renderButton","getTimeString","className","this","nowTime","milliseconds","minutes","seconds","counting","minUp","parseInt","minDown","secUp","secDown","millsecUp","millsecDown","toString","onClick","configUp","configDown","startTimer","resetTimer","type","event","setMode","Component","BasketButton","handleArrowReload","state_reload","setState","arrows","state_button_reload","state_button_shoot","handleClickedShooting","state_button_scored","state_button_missed","handleClickedScored","named","prev_scored_basket","basket","indexOf","handleInfoCallBack","index","alert","push","scored_basket","state_button_type","handleTypeOfBasket","handleClickedMissed","handleClickedViolation","violations","points","Score","style","fontSize","color","formatCountViolation","borderRadius","width","formatCountArrow","id","backgroundColor","Panel","timer","React","createRef","GameField","point_spec","x1","x2","x3","x4","y1","y2","y3","y4","rad","src","GameFieldImage","alt","useMap","name","shape","coords","href","ScoreHandler","hover","PotsStatus","ScoreBoard","Time","App","console","log","newList","x","length","lastPots","nowPots","newScore","PotsScoreTable","firstSingle","firstTwinning","secondSingle","secondTwinning","Data","intervaID","countDownInitTime","timerEnable","timeCountDown","pauseTimer","setInterval","clearInterval","target","checked","textAlign","score","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be4df02a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../styles/timer-style.css\";\n\nclass Timer extends Component {\n  //constructor\n  constructor(props) {\n    super(props);\n\n    //Timer state\n    this.state = {};\n\n    /*bind function to timer*/\n\n    this.renderTimer = this.renderTimer.bind(this);\n    this.renderButton = this.renderButton.bind(this);\n\n    this.getTimeString = this.getTimeString.bind(this);\n  }\n\n  renderTimer() {\n    let className = \"badge badge-\";\n    if (\n      this.props.nowTime.milliseconds === 0 &&\n      this.props.nowTime.minutes === 0 &&\n      this.props.nowTime.seconds === 0\n    ) {\n      className += \"danger\";\n    } else {\n      className += \"primary\";\n    }\n    return className;\n  }\n\n  renderButton() {\n    let className = \"btn btn-lg badge-pill m-2 btn-\";\n    if (this.props.counting) {\n      className += \"danger\";\n    } else {\n      className += \"primary\";\n    }\n    return className;\n  }\n\n  getTimeString() {\n    let minUp = parseInt(this.props.nowTime.minutes / 10);\n    let minDown = parseInt(this.props.nowTime.minutes % 10);\n    let secUp = parseInt(this.props.nowTime.seconds / 10);\n    let secDown = parseInt(this.props.nowTime.seconds % 10);\n    let millsecUp = parseInt(this.props.nowTime.milliseconds / 10);\n    let millsecDown = parseInt(this.props.nowTime.milliseconds % 10);\n    return (\n      minUp.toString(10) +\n      minDown.toString(10) +\n      \":\" +\n      secUp.toString(10) +\n      secDown.toString(10) +\n      \"'\" +\n      millsecUp.toString(10) +\n      millsecDown.toString(10)\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"timer-centered\">\n          <span className={this.renderTimer()}>{this.getTimeString()}</span>\n          <div>\n            <button\n              onClick={() => this.props.configUp()}\n              className=\" timer-adjustbutton-vertical btn-primary\"\n            >\n              +\n            </button>\n            <button\n              onClick={() => this.props.configDown()}\n              className=\"timer-adjustbutton-vertical btn-primary\"\n            >\n              -\n            </button>\n          </div>\n        </div>\n        <div className=\"timer-button-center\">\n          <button\n            onClick={() => this.props.startTimer()}\n            className={this.renderButton()}\n          >\n            {this.props.counting && \"Pause\"}\n            {!this.props.counting && \"Start\"}\n          </button>\n\n          <button\n            onClick={() => this.props.resetTimer()}\n            className=\"btn btn-warning badge-pill m-2 btn-lg\"\n          >\n            Reset\n          </button>\n          <label className=\"switch\">\n            <input\n              type=\"checkbox\"\n              onClick={(event) => this.props.setMode(event)}\n            />\n            <span className=\"slider round\"></span>\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React, { Component } from \"react\";\nimport \"../../styles/panel-list-style.css\";\n\nclass BasketButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickedScored = this.handleClickedScored.bind(this);\n\n    this.state = {\n      points: 0,\n      arrows: 0,\n      scored_basket: \"none\",\n      prev_scored_basket: \"none\",\n      state_button_reload: \"btn\",\n      state_button_shoot: \"disabled\",\n      state_button_scored: \"disabled\",\n      state_button_missed: \"disabled\",\n      state_button_type: \"disabled\",\n      violations: 0,\n      basket: [],\n    };\n  }\n\n  handleArrowReload = () => {\n    this.setState({ arrows: this.state.arrows + 1 });\n    let state;\n    let state_reload;\n    if (this.state.arrows > 3) {\n      state_reload = \"disabled\";\n    } else {\n      state_reload = \"btn\";\n    }\n\n    if (this.state.arrows < 0) {\n      state = \"disabled\";\n    } else {\n      state = \"btn\";\n    }\n\n    this.setState({ state_button_reload: state_reload });\n    this.setState({ state_button_shoot: state });\n  };\n\n  handleClickedShooting = () => {\n    let state_scored;\n    let state;\n    let state_missed;\n    let state_reload;\n    state_scored = \"btn\";\n    state = \"disabled\";\n    state_missed = \"btn\";\n    state_reload = \"disabled\";\n\n    this.setState({ state_button_scored: state_scored });\n    this.setState({ state_button_shoot: state });\n    this.setState({ state_button_missed: state_missed });\n    this.setState({ state_button_reload: state_reload });\n    if (this.state.arrows > 0) {\n      this.setState({ arrows: this.state.arrows - 1 });\n    }\n  };\n\n  handleClickedScored = (named) => {\n    if (named === \"button_scored III\") {\n      let state;\n      let state_reload;\n      if (named !== this.state.prev_scored_basket) {\n        if (this.state.basket.indexOf(named) > -1) {\n          this.props.handleInfoCallBack(4, this.props.index);\n        } else {\n          this.props.handleInfoCallBack(1, this.props.index);\n        }\n      } else {\n        alert(\"No Points!\");\n      }\n\n      if (this.state.arrows > 0) {\n        state = \"btn\";\n      } else {\n        state = \"disabled\";\n      }\n      state_reload = \"btn\";\n      this.state.basket.push(named);\n\n      this.setState(this.state.basket);\n      this.setState({ state_button_shoot: state });\n      this.setState({ state_button_reload: state_reload });\n      this.setState({ prev_scored_basket: named });\n    }\n\n    let state_scored;\n    let state_missed;\n    state_scored = \"disabled\";\n    state_missed = \"disabled\";\n\n    this.setState({ state_button_scored: state_scored });\n    this.setState({ state_button_missed: state_missed });\n    this.setState({ scored_basket: named });\n\n    if (named !== \"button_scored III\") {\n      let state_type;\n      state_type = \"btn\";\n      this.setState({ state_button_type: state_type });\n    }\n  };\n\n  handleTypeOfBasket = (named) => {\n    if (\n      this.state.scored_basket + \" \" + named !==\n      this.state.prev_scored_basket\n    ) {\n      if (\n        this.state.basket.indexOf(this.state.scored_basket + \" \" + named) > -1\n      ) {\n        this.props.handleInfoCallBack(4, this.props.index);\n      } else {\n        this.props.handleInfoCallBack(1, this.props.index);\n      }\n\n      this.state.basket.push(this.state.scored_basket + \" \" + named);\n      this.setState(this.state.basket);\n    } else {\n      alert(\"No Points!\");\n    }\n\n    this.setState({\n      prev_scored_basket: this.state.scored_basket + \" \" + named,\n    });\n\n    let state;\n    let state_type;\n    let state_reload;\n    state_reload = \"btn\";\n    state_type = \"disabled\";\n\n    if (this.state.arrows > 0) {\n      state = \"btn\";\n      this.setState({ state_button_shoot: state });\n    }\n\n    this.setState({ state_button_type: state_type });\n    this.setState({ state_button_reload: state_reload });\n  };\n\n  handleClickedMissed = () => {\n    let state_scored;\n    let state_missed;\n    let state_reload;\n    state_scored = \"disabled\";\n    state_missed = \"disabled\";\n    state_reload = \"btn\";\n\n    this.setState({ state_button_scored: state_scored });\n    this.setState({ state_button_missed: state_missed });\n    this.setState({ state_button_reload: state_reload });\n\n    if (this.state.arrows > 0) {\n      let state;\n      if (this.state.arrows > 0) {\n        state = \"btn\";\n      } else {\n        state = \"disabled\";\n      }\n      this.setState({ state_button_shoot: state });\n    }\n  };\n\n  handleClickedViolation = () => {\n    this.setState({ violations: this.state.violations + 1 });\n  };\n  ///here\n  formatCount() {\n    const points = this.props.Score;\n    return points === 0 ? \"Zero\" : points;\n  }\n\n  formatCountArrow() {\n    const arrows = this.state.arrows;\n    return arrows === 0 ? \"Zero\" : arrows;\n  }\n\n  formatCountViolation() {\n    const violations = this.state.violations;\n    return violations === 0 ? \"Zero\" : violations;\n  }\n\n  render() {\n    return (\n      <div className=\"grid-container\">\n        <div>\n          {/* <span\n            type=\"button\"\n            className=\"badge\"\n            style={{ fontSize: \"200%\", color: \"white\" }}\n          >\n            Score : {this.formatCount()}\n          </span> */}\n          <span\n            type=\"button\"\n            className=\"badge\"\n            style={{ fontSize: \"200%\", color: \"white\" }}\n          >\n            Violation : {this.formatCountViolation()}\n          </span>\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            className={this.state.state_button_reload}\n            onClick={() => this.handleArrowReload()}\n            style={{ borderRadius: 20, width: \"50%\" }}\n          >\n            Arrow Reload\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn\"\n            style={{ borderRadius: 20, width: \"50%\" }}\n          >\n            Arrow Reload Failed\n          </button>\n        </div>\n        <div>\n          <span\n            type=\"button\"\n            className=\"badge\"\n            style={{ fontSize: \"150%\", color: \"white\" }}\n          >\n            Available Arrows : {this.formatCountArrow()}\n          </span>\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            className={this.state.state_button_shoot}\n            id=\"button_shoot\"\n            onClick={() => this.handleClickedShooting()}\n            style={{ borderRadius: 20, width: \"100%\" }}\n          >\n            Shooting\n          </button>\n        </div>\n        <div>\n          <table className=\"buttons\">\n            <tbody>\n              <tr>\n                <td>\n                  <button\n                    type=\"button\"\n                    className={this.state.state_button_scored}\n                    id=\"button_scored I\"\n                    onClick={() => this.handleClickedScored(\"button_scored I\")}\n                    style={{ borderRadius: 20 }}\n                  >\n                    I-type Scored\n                  </button>\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    className={this.state.state_button_scored}\n                    id=\"button_scored II\"\n                    onClick={() => this.handleClickedScored(\"button_scored II\")}\n                    style={{ borderRadius: 20 }}\n                  >\n                    II-type Scored\n                  </button>\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    className={this.state.state_button_scored}\n                    id=\"button_scored III\"\n                    onClick={() =>\n                      this.handleClickedScored(\"button_scored III\")\n                    }\n                    style={{ borderRadius: 20 }}\n                  >\n                    III-type Scored\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            className={this.state.state_button_type}\n            id=\"button_type up\"\n            onClick={() => this.handleTypeOfBasket(\"button_type up\")}\n            style={{ width: \"50%\" }}\n          >\n            Type Up\n          </button>\n          <button\n            type=\"button\"\n            className={this.state.state_button_type}\n            id=\"button_type down\"\n            onClick={() => this.handleTypeOfBasket(\"button_type down\")}\n            style={{ width: \"50%\" }}\n          >\n            Type Down\n          </button>\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            className={this.state.state_button_missed}\n            id=\"button_missed\"\n            onClick={() => this.handleClickedMissed()}\n            style={{ borderRadius: 20, width: \"100%\" }}\n          >\n            Missed\n          </button>\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn\"\n            onClick={() => this.handleClickedViolation()}\n            style={{\n              borderRadius: 20,\n              width: \"50%\",\n              fontSize: \"150%\",\n              color: \"blue\",\n              backgroundColor: \"red\",\n            }}\n          >\n            Violation\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BasketButton;\n","import React, { Component } from \"react\";\nimport \"../../styles/panel-style.css\";\nimport \"../../styles/panel-list-style.css\";\nimport BasketButton from \"./Panel-basket\";\n\nclass Panel extends Component {\n  constructor(props) {\n    super(props);\n    this.timer = React.createRef();\n  }\n\n  state = {};\n\n  render() {\n    return (\n      <div>\n        <BasketButton\n          Score={this.props.Score}\n          handleInfoCallBack={this.props.handleInfoCallBack}\n          index={this.props.index}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Panel;\n","export default __webpack_public_path__ + \"static/media/gamefield.327b5015.png\";","import React, { Component } from \"react\";\nimport \"../../styles/GameField.css\";\nimport GameFieldImage from \"../../img/gamefield.png\";\nclass GameField extends Component {\n  point_spec = {\n    x1: 200,\n    x2: 284,\n    x3: 320,\n    x4: 403,\n    y1: 176,\n    y2: 287,\n    y3: 316,\n    y4: 428,\n    rad: 8,\n  };\n\n  state = {};\n\n  render() {\n    return (\n      <div>\n        <img\n          className=\"GameFieldImage\"\n          src={GameFieldImage}\n          alt=\"error\"\n          useMap=\"#GameField\"\n        />\n        <map name=\"GameField\">\n          <area\n            shape=\"circle\"\n            coords=\"201, 287, 10\"\n            alt=\"buttonerror\"\n            href=\"#\"\n            onClick={() => this.props.ScoreHandler(9)}\n            hover=\"true\"\n            className=\"test\"\n          />\n          <area\n            shape=\"circle\"\n            coords=\"201,316,10\"\n            alt=\"buttonerror\"\n            href=\"#\"\n            onClick={() => this.props.ScoreHandler(1)}\n            hover=\"true\"\n          />\n          <area\n            shape=\"circle\"\n            coords=\"285,176,10\"\n            alt=\"buttonerror\"\n            href=\"#\"\n            onClick={() => this.props.ScoreHandler(2)}\n            hover=\"true\"\n          />\n\n          <area\n            shape=\"circle\"\n            coords=\"285,302,10\"\n            alt=\"buttonerror\"\n            href=\"#\"\n            onClick={() => this.props.ScoreHandler(3)}\n            hover=\"true\"\n          />\n          <area\n            shape=\"circle\"\n            coords=\"285,428,10\"\n            alt=\"buttonerror\"\n            href=\"#\"\n            onClick={() => this.props.ScoreHandler(4)}\n            hover=\"true\"\n          />\n          <area\n            shape=\"circle\"\n            coords=\"320,176,10\"\n            alt=\"buttonerror\"\n            href=\"#\"\n            onClick={() => this.props.ScoreHandler(5)}\n            hover=\"true\"\n          />\n          <area\n            shape=\"circle\"\n            coords=\"320,302,10\"\n            alt=\"buttonerror\"\n            href=\"#\"\n            onClick={() => this.props.ScoreHandler(6)}\n            hover=\"true\"\n          />\n\n          <area\n            shape=\"circle\"\n            coords=\"320,428,10\"\n            alt=\"buttonerror\"\n            href=\"#\"\n            onClick={() => this.props.ScoreHandler(7)}\n            hover=\"true\"\n          />\n          <area\n            shape=\"circle\"\n            coords=\"403,287,10\"\n            alt=\"buttonerror\"\n            href=\"#\"\n            onClick={() => this.props.ScoreHandler(8)}\n            hover=\"true\"\n          />\n          <area\n            shape=\"circle\"\n            coords=\"403,316,10\"\n            alt=\"buttonerror\"\n            href=\"#\"\n            onClick={() => this.props.ScoreHandler(0)}\n            hover=\"true\"\n          />\n        </map>\n\n        <div>\n          <p className=\"PotsStatus p0\">\n            {this.props.PotsStatus[9]}\n            <br />\n          </p>\n          <p className=\"PotsStatus p1\">\n            {this.props.PotsStatus[1]} <br />\n          </p>\n          <p className=\"PotsStatus p2\">\n            {this.props.PotsStatus[2]} <br />\n          </p>\n          <p className=\"PotsStatus p3\">\n            {this.props.PotsStatus[3]} <br />\n          </p>\n          <p className=\"PotsStatus p4\">\n            {this.props.PotsStatus[4]} <br />\n          </p>\n          <p className=\"PotsStatus p5\">\n            {this.props.PotsStatus[5]} <br />\n          </p>\n          <p className=\"PotsStatus p6\">\n            {this.props.PotsStatus[6]} <br />\n          </p>\n          <p className=\"PotsStatus p7\">\n            {this.props.PotsStatus[7]} <br />\n          </p>\n          <p className=\"PotsStatus p8\">\n            {this.props.PotsStatus[8]} <br />\n          </p>\n          <p className=\"PotsStatus p9\">\n            {this.props.PotsStatus[0]} <br />\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameField;\n","import React, { Component } from \"react\";\nimport \"../../styles/ScoreBoard.css\";\n//this is the parent class for Panel and GameField\n\nclass ScoreBoard extends Component {\n  state = {};\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <p className=\"scoreboard\">Score: {this.props.Score}</p>\n      </div>\n    );\n  }\n}\n\nexport default ScoreBoard;\n","class Time {\n  constructor(minutes, seconds, milliseconds) {\n    this.minutes = minutes;\n    this.seconds = seconds;\n    this.milliseconds = milliseconds;\n  }\n}\nexport default Time;\n","import React, { Component } from \"react\";\n\nimport \"./styles/mainApp.css\";\nimport \"./styles/panel-style.css\";\nimport \"./styles/panel-list-style.css\";\n\nimport Timer from \"./components/Timer/timer\";\nimport Panel from \"./components/Panel/Panel\";\nimport GameField from \"./components/GameField/GameField\";\nimport ScoreBoard from \"./components/ScoreBoard/ScoreBoard\";\n\nimport Time from \"./components/Timer/time\";\n//init the timer by these value\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    //used for interval control\n    this.intervaID = {};\n\n    this.state = {\n      // common state\n      Score: [0, 0], // index 0 for our team and 1 for opponent\n\n      //gamefield state\n      PotsScoreTable: {\n        firstSingle: 1,\n        firstTwinning: 3,\n        secondSingle: 1,\n        secondTwinning: 3,\n      },\n      PotsStatus: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      lastPots: [-1, -1],\n      //panel state\n\n      //timer state\n      countDownInitTime: new Time(1, 0, 0),\n      nowTime: new Time(1, 0, 0),\n      timerEnable: false,\n      counting: false,\n    };\n    //panel functions\n    this.handleInfoCallBack = this.handleInfoCallBack.bind(this);\n\n    //timer functions\n    this.timeCountDown = this.timeCountDown.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.pauseTimer = this.pauseTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n    this.configUp = this.configUp.bind(this);\n    this.configDown = this.configDown.bind(this);\n    this.setMode = this.setMode.bind(this);\n  }\n\n  //GameField functions start here\n  ScoreHandler = (index) => {\n    console.log(this.state.nowTime);\n    //updating pots\n    var newList = [];\n    for (var x = 0; x < this.state.PotsStatus.length; x++) {\n      if (x === index) newList.push(this.state.PotsStatus[x] + 1);\n      else newList.push(this.state.PotsStatus[x]);\n    }\n    this.setState({ PotsStatus: newList });\n\n    //updating score\n    if (\n      (index < 5 && index === this.state.lastPots[0]) ||\n      (index >= 5 && index === this.state.lastPots[1])\n    ) {\n      return;\n    } else {\n      let nowPots = [this.state.lastPots[0], this.state.lastPots[1]];\n      if (index < 5) nowPots[0] = index;\n      else nowPots[1] = index;\n      this.setState({ lastPots: nowPots });\n    }\n    var newScore = [this.state.Score[0], this.state.Score[1]];\n\n    if (index < 5) {\n      if (this.state.PotsStatus[index] === 0) {\n        newScore[0] += this.state.PotsScoreTable.firstSingle;\n      } else if (this.state.PotsStatus[index] === 1) {\n        newScore[0] += this.state.PotsScoreTable.firstTwinning;\n      } else if (this.state.PotsStatus[index] === 2) {\n        newScore[0] += this.state.PotsScoreTable.secondSingle;\n      } else if (this.state.PotsStatus[index] === 3) {\n        newScore[0] += this.state.PotsScoreTable.secondTwinning;\n      } else {\n        newScore[0] += 1;\n      }\n    } else {\n      if (this.state.PotsStatus[index] === 0) {\n        newScore[1] += this.state.PotsScoreTable.firstSingle;\n      } else if (this.state.PotsStatus[index] === 1) {\n        newScore[1] += this.state.PotsScoreTable.firstTwinning;\n      } else if (this.state.PotsStatus[index] === 2) {\n        newScore[1] += this.state.PotsScoreTable.secondSingle;\n      } else if (this.state.PotsStatus[index] === 3) {\n        newScore[1] += this.state.PotsScoreTable.secondTwinning;\n      } else {\n        newScore[1] += 1;\n      }\n    }\n    this.setState({ Score: newScore });\n  };\n\n  //Panel functions start here\n  handleInfoCallBack = (Data, index) => {\n    var newScore = [this.state.Score[0], this.state.Score[1]];\n\n    if (index === 0) {\n      newScore[0] += Data;\n    }\n    if (index === 1) {\n      newScore[1] += Data;\n    }\n\n    this.setState({ Score: newScore });\n  };\n\n  timeCountDown() {\n    var { minutes, seconds, milliseconds } = this.state.nowTime;\n    if (\n      //check if the time is already 0\n      //if so then call pause\n      milliseconds === 0 &&\n      minutes === 0 &&\n      seconds === 0 &&\n      this.state.counting === true\n    )\n      this.pauseTimer();\n    else if (this.state.counting === true) {\n      //handle normal count down\n      this.setState({\n        nowTime: new Time(minutes, seconds, milliseconds - 3),\n      });\n\n      if (milliseconds <= 0) {\n        if (seconds === 0) {\n          if (minutes === 0) {\n            this.pauseTimer();\n            return;\n          }\n          this.setState({\n            nowTime: new Time(minutes - 1, 60, milliseconds),\n          });\n        }\n        this.setState({\n          nowTime: new Time(\n            this.state.nowTime.minutes,\n            this.state.nowTime.seconds - 1,\n            60\n          ),\n        });\n      }\n    }\n  }\n  startTimer() {\n    //handle pause\n    if (this.state.counting === true) {\n      this.pauseTimer();\n    } else {\n      //handle start or resume\n      this.setState({\n        intervaID: setInterval(this.timeCountDown, 1000 / 20),\n        timerEnable: true,\n        counting: true,\n      });\n    }\n  }\n  pauseTimer() {\n    this.setState({\n      counting: false,\n      timerEnable: false,\n    });\n    clearInterval(this.state.intervaID);\n  }\n  resetTimer() {\n    var { minutes, seconds, milliseconds } = this.state.countDownInitTime;\n    this.setState({\n      counting: false,\n      timerEnable: false,\n      nowTime: new Time(minutes, seconds, milliseconds),\n    });\n    clearInterval(this.state.intervaID);\n  }\n  configUp() {\n    var { minutes, seconds, milliseconds } = this.state.nowTime;\n\n    if (minutes >= 60) {\n      this.setState({ nowTime: new Time(60, 0, this.nowTime.milliseconds) });\n    } else if (seconds + 1 >= 60) {\n      this.setState({\n        nowTime: new Time(minutes + 1, 0, milliseconds),\n      });\n    } else {\n      this.setState({\n        nowTime: new Time(minutes, seconds + 1, milliseconds),\n      });\n    }\n  }\n  configDown() {\n    var { minutes, seconds, milliseconds } = this.state.nowTime;\n\n    if (seconds - 1 < 0 && minutes === 0) {\n      this.setState({\n        nowTime: new Time(0, 0, milliseconds),\n      });\n    } else if (seconds - 1 < 0) {\n      this.setState({\n        nowTime: new Time(minutes - 1, 59, milliseconds),\n      });\n    } else {\n      this.setState({\n        nowTime: new Time(minutes, seconds - 1, milliseconds),\n      });\n    }\n  }\n  setMode(event) {\n    var { minutes, seconds, milliseconds } = this.state.countDownInitTime;\n    if (event.target.checked) {\n      this.setState(\n        {\n          countDownInitTime: new Time(3, seconds, milliseconds),\n        },\n        () => {\n          this.resetTimer();\n        }\n      );\n    } else {\n      this.setState(\n        {\n          countDownInitTime: new Time(1, seconds, milliseconds),\n        },\n        () => {\n          this.resetTimer();\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"mainPageStyle\">\n        <div className=\"row\">\n          <div className=\"column left\" style={{ textAlign: \"center\" }}>\n            <ScoreBoard\n              className=\"ScoreBoardCenter\"\n              Score={this.state.Score[0]}\n            />\n          </div>\n          <div className=\"column middle\">\n            <Timer\n              nowTime={this.state.nowTime}\n              countDownInitTime={this.state.countDownInitTime}\n              timerEnable={this.state.timerEnable}\n              counting={this.state.counting}\n              timeCountDown={this.timeCountDown}\n              startTimer={this.startTimer}\n              pauseTimer={this.pauseTimer}\n              resetTimer={this.resetTimer}\n              configUp={this.configUp}\n              configDown={this.configDown}\n              setMode={this.setMode}\n            />\n          </div>\n          <div className=\"column right\" style={{ textAlign: \"center\" }}>\n            <ScoreBoard\n              className=\"ScoreBoardCenter\"\n              Score={this.state.Score[1]}\n            />\n          </div>\n        </div>\n        <div className=\"horizontal-container\">\n          <div>\n            <Panel\n              score={this.state.Score[0]}\n              handleInfoCallBack={this.handleInfoCallBack}\n              index={0}\n            />\n          </div>\n          <GameField\n            Score={this.state.Score}\n            PotsStatus={this.state.PotsStatus}\n            ScoreHandler={this.ScoreHandler}\n          />\n          <div>\n            <Panel\n              score={this.state.Score[1]}\n              handleInfoCallBack={this.handleInfoCallBack}\n              index={1}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}